#!/bin/bash

# INKSPOT Pull Request Creation Script
# This script creates Pull Requests for all feature and fix branches

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# GitHub configuration
REPO_OWNER="antoine13330"
REPO_NAME="INKSPOT-5z"
BASE_BRANCH="dev"

# Array of branches to create PRs for
BRANCHES=(
    "fix/docker-build-issues"
    "fix/api-routes-stripe-s3"
    "fix/grafana-dashboard-json-structure"
    "feature/docker-cleanup-ngrok-replacement"
    "feature/monitoring-stack-setup"
    "feature/scripts-and-documentation"
    "feature/ui-components-and-hooks"
    "feature/pages-and-api-routes"
)

# Function to create a Pull Request
create_pull_request() {
    local branch=$1
    local title=""
    local body=""
    
    case $branch in
        "fix/docker-build-issues")
            title="üîß Fix: Resolve Docker build issues and optimize build process"
            body="## üîß Fix: Docker Build Issues

### **Probl√®me r√©solu**
- Erreurs de build Docker avec Stripe/S3
- Optimisation du processus de build
- Correction des imports WebSocket

### **Fichiers modifi√©s**
- \`Dockerfile\` - Optimisation du build multi-stage
- \`Dockerfile.websocket\` - Correction des imports CommonJS
- \`.dockerignore\` - Exclusion des fichiers inutiles

### **Corrections apport√©es**
- ‚úÖ Initialisation conditionnelle des clients Stripe/S3
- ‚úÖ Variables ENV factices pour le build
- ‚úÖ Optimisation de l'installation des d√©pendances
- ‚úÖ Correction des imports WebSocket (CommonJS)
- ‚úÖ Suppression de \`npx prisma db push\` du build

### **R√©sultat**
- Build Docker optimis√© et fiable
- Temps de build r√©duit
- Gestion gracieuse des variables d'environnement manquantes

**Closes:** Docker build issues"
            ;;
        "fix/api-routes-stripe-s3")
            title="üîß Fix: Resolve API routes and Stripe/S3 integration issues"
            body="## üîß Fix: API Routes and Stripe/S3 Integration

### **Probl√®me r√©solu**
- Erreurs d'API et int√©gration Stripe/S3
- Gestion des variables d'environnement manquantes

### **Fichiers modifi√©s**
- \`lib/stripe.ts\` - Gestion gracieuse des cl√©s manquantes
- \`lib/s3.ts\` - Gestion gracieuse des credentials manquants
- \`app/api/upload/route.ts\` - Correction des appels de fonctions
- \`app/api/bookings/route.ts\` - Utilisation des helpers Stripe
- \`app/api/stripe/webhook/route.ts\` - V√©rifications de nullit√©

### **Corrections apport√©es**
- ‚úÖ Gestion gracieuse des variables d'environnement manquantes
- ‚úÖ Correction des appels de fonctions (\`generateS3Key\`, \`refundPayment\`)
- ‚úÖ V√©rifications de nullit√© pour les clients Stripe/S3
- ‚úÖ Am√©lioration de la gestion d'erreurs

### **R√©sultat**
- API routes robustes
- Gestion d'erreurs am√©lior√©e
- Compatibilit√© avec le build Docker

**Closes:** API integration issues"
            ;;
        "fix/grafana-dashboard-json-structure")
            title="üîß Fix: Correct Grafana dashboard JSON structure"
            body="## üîß Fix: Grafana Dashboard JSON Structure

### **Probl√®me r√©solu**
- Erreurs de provisioning Grafana
- \"Dashboard title cannot be empty\" error

### **Fichiers modifi√©s**
- \`monitoring/grafana/dashboards/inkspot-overview.json\`
- \`monitoring/grafana/dashboards/inkspot-business.json\`
- \`monitoring/grafana/dashboards/inkspot-technical.json\`
- \`monitoring/grafana/dashboards/inkspot-realtime.json\`

### **Corrections apport√©es**
- ‚úÖ Suppression du wrapper \`\"dashboard\": {}\`
- ‚úÖ Placement des propri√©t√©s directement √† la racine
- ‚úÖ Correction de l'erreur \"Dashboard title cannot be empty\"

### **R√©sultat**
- Dashboards Grafana fonctionnels
- Provisioning automatique r√©ussi
- Monitoring stack op√©rationnel

**Closes:** Grafana dashboard errors"
            ;;
        "feature/docker-cleanup-ngrok-replacement")
            title="üöÄ Feature: Replace ngrok with LocalTunnel for webhook tunneling"
            body="## üöÄ Feature: LocalTunnel Integration

### **Fonctionnalit√© ajout√©e**
- Remplacement de ngrok par LocalTunnel
- Solution aux probl√®mes de session simultan√©e

### **Fichiers modifi√©s**
- \`docker-compose.yml\` - Suppression ngrok, ajout LocalTunnel
- \`env.example\` - Nettoyage des variables ngrok
- \`scripts/start-docker.sh\` - Script de d√©marrage simplifi√©

### **Am√©liorations apport√©es**
- ‚úÖ Suppression compl√®te de ngrok et Cloudflare
- ‚úÖ Ajout de LocalTunnel pour les webhooks
- ‚úÖ URL webhook : \`https://inkspot-webhook.loca.lt\`
- ‚úÖ Script de d√©marrage simplifi√©

### **R√©sultat**
- Webhooks Stripe fonctionnels
- Pas de limite de session
- Configuration simplifi√©e

**Closes:** ngrok session limits"
            ;;
        "feature/monitoring-stack-setup")
            title="üöÄ Feature: Add comprehensive monitoring stack"
            body="## üöÄ Feature: Monitoring Stack Setup

### **Fonctionnalit√© ajout√©e**
- Stack de monitoring complet
- Observabilit√© de l'application

### **Composants ajout√©s**
- **Grafana** - Dashboards de visualisation
- **Prometheus** - Collecte de m√©triques
- **Node Exporter** - M√©triques syst√®me
- **Postgres Exporter** - M√©triques base de donn√©es

### **Dashboards cr√©√©s**
- \`inkspot-business.json\` - M√©triques business
- \`inkspot-technical.json\` - M√©triques techniques
- \`inkspot-realtime.json\` - Monitoring temps r√©el
- \`inkspot-overview.json\` - Vue d'ensemble

### **Fonctionnalit√©s**
- ‚úÖ M√©triques business (revenue, bookings, users)
- ‚úÖ M√©triques techniques (performance, errors, resources)
- ‚úÖ Monitoring temps r√©el
- ‚úÖ Collecte automatique de m√©triques syst√®me et DB

### **R√©sultat**
- Observabilit√© compl√®te de l'application
- Monitoring en temps r√©el
- Alertes et notifications

**Closes:** monitoring requirements"
            ;;
        "feature/scripts-and-documentation")
            title="üöÄ Feature: Add comprehensive scripts and documentation"
            body="## üöÄ Feature: Scripts and Documentation

### **Fonctionnalit√© ajout√©e**
- Scripts automatis√©s et documentation compl√®te
- Workflow de d√©veloppement optimis√©

### **Scripts ajout√©s**
- \`start-docker.sh\` - Gestion Docker Compose avec LocalTunnel
- \`backup.sh\` - Sauvegarde automatique
- \`build.sh\` - Build de production
- \`reset-database.ts\` - Reset de base de donn√©es
- \`verify-database.ts\` - V√©rification de base de donn√©es

### **Documentation ajout√©e**
- \`ENVIRONMENT_SETUP.md\` - Guide de setup environnement
- \`DOCKER_SETUP.md\` - Guide de setup Docker
- \`MODULAR_ARCHITECTURE.md\` - Architecture modulaire
- \`DESIGN_SYSTEM_GUIDE.md\` - Guide du syst√®me de design
- \`DATABASE_RESET_SUMMARY.md\` - R√©sum√© des resets DB

### **Fonctionnalit√©s**
- ‚úÖ Workflow de d√©veloppement automatis√©
- ‚úÖ Documentation compl√®te du projet
- ‚úÖ Scripts de maintenance et backup
- ‚úÖ Guides de setup et configuration

### **R√©sultat**
- Workflow de d√©veloppement optimis√©
- Documentation compl√®te et maintenable
- Scripts de maintenance automatis√©s

**Closes:** documentation and automation requirements"
            ;;
        "feature/ui-components-and-hooks")
            title="üöÄ Feature: Add comprehensive UI components and custom hooks"
            body="## üöÄ Feature: UI Components and Custom Hooks

### **Fonctionnalit√© ajout√©e**
- Composants UI modernes et hooks personnalis√©s
- Interface utilisateur am√©lior√©e

### **Composants ajout√©s**
- **Chat Interface** - Messagerie temps r√©el
- **Conversation Management** - Gestion des conversations
- **User Menu** - Menu utilisateur et navigation
- **Typing Indicators** - Indicateurs de frappe
- **Message Bubbles** - Bulles de messages

### **Hooks personnalis√©s**
- \`useApi\` - Gestion des requ√™tes API
- \`useLocalStorage\` - Utilitaires de stockage local
- \`useRecommendations\` - Syst√®me de recommandations

### **Types TypeScript**
- Extensions NextAuth
- Types de r√©ponses API
- Types de props de composants

### **Fonctionnalit√©s**
- ‚úÖ Interface de chat en temps r√©el
- ‚úÖ Gestion des conversations
- ‚úÖ Menu utilisateur et navigation
- ‚úÖ Indicateurs de frappe
- ‚úÖ Hooks r√©utilisables

### **R√©sultat**
- Interface utilisateur moderne
- Composants r√©utilisables
- Exp√©rience utilisateur am√©lior√©e

**Closes:** UI/UX requirements"
            ;;
        "feature/pages-and-api-routes")
            title="üöÄ Feature: Add comprehensive pages and API routes"
            body="## üöÄ Feature: Pages and API Routes

### **Fonctionnalit√© ajout√©e**
- Pages et routes API compl√®tes
- Fonctionnalit√©s d'application compl√®tes

### **Pages ajout√©es**
- **Authentication** - Login, register, reset password
- **Conversations** - Messagerie temps r√©el
- **Profile** - Gestion du profil utilisateur
- **Search** - Recherche et recommandations
- **Admin Dashboard** - Dashboard administrateur

### **API Routes ajout√©es**
- **Authentication** - Endpoints d'authentification
- **Bookings** - Gestion des r√©servations
- **Health Checks** - Monitoring et health checks
- **File Upload** - Upload de fichiers
- **WebSocket** - Connexions temps r√©el

### **Fonctionnalit√©s**
- ‚úÖ Authentification avec NextAuth
- ‚úÖ Messagerie temps r√©el avec WebSocket
- ‚úÖ Upload de fichiers avec S3
- ‚úÖ Syst√®me de recherche et recommandations
- ‚úÖ Gestion des r√©servations et paiements

### **R√©sultat**
- Application fonctionnelle compl√®te
- API robuste et s√©curis√©e
- Exp√©rience utilisateur compl√®te

**Closes:** core application requirements"
            ;;
        *)
            title="üîÑ Update: $branch"
            body="## üîÑ Update: $branch

This is an automated Pull Request for the branch \`$branch\`.

Please review the changes and provide feedback."
            ;;
    esac
    
    print_status "Creating PR for $branch..."
    
    # Create PR using GitHub CLI (if available)
    if command -v gh &> /dev/null; then
        gh pr create \
            --repo "$REPO_OWNER/$REPO_NAME" \
            --base "$BASE_BRANCH" \
            --head "$branch" \
            --title "$title" \
            --body "$body" \
            --draft
        print_success "PR created for $branch using GitHub CLI"
    else
        print_warning "GitHub CLI not found. Please create PR manually:"
        print_status "https://github.com/$REPO_OWNER/$REPO_NAME/pull/new/$branch"
        print_status "Title: $title"
        print_status "Body: $body"
    fi
}

# Main script
main() {
    print_status "Starting Pull Request creation for INKSPOT project..."
    
    for branch in "${BRANCHES[@]}"; do
        print_status "Processing branch: $branch"
        create_pull_request "$branch"
        echo ""
    done
    
    print_success "All Pull Requests have been processed!"
    print_status "Please review and merge the PRs as needed."
}

# Run main function
main "$@" 